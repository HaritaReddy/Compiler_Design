Grammar

    0 $accept: ED $end

    1 ED: E

    2 E: E '+' E
    3  | E '-' E
    4  | E '*' E
    5  | E '/' E
    6  | '(' E ')'
    7  | NUM
    8  | ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6
')' (41) 6
'*' (42) 4
'+' (43) 2
'-' (45) 3
'/' (47) 5
error (256)
ID (258) 8
NUM (259) 7


Nonterminals, with rules where they appear

$accept (11)
    on left: 0
ED (12)
    on left: 1, on right: 0
E (13)
    on left: 2 3 4 5 6 7 8, on right: 1 2 3 4 5 6


State 0

    0 $accept: . ED $end

    ID   shift, and go to state 1
    NUM  shift, and go to state 2
    '('  shift, and go to state 3

    ED  go to state 4
    E   go to state 5


State 1

    8 E: ID .

    $default  reduce using rule 8 (E)


State 2

    7 E: NUM .

    $default  reduce using rule 7 (E)


State 3

    6 E: '(' . E ')'

    ID   shift, and go to state 1
    NUM  shift, and go to state 2
    '('  shift, and go to state 3

    E  go to state 6


State 4

    0 $accept: ED . $end

    $end  shift, and go to state 7


State 5

    1 ED: E .
    2 E: E . '+' E
    3  | E . '-' E
    4  | E . '*' E
    5  | E . '/' E

    '+'  shift, and go to state 8
    '-'  shift, and go to state 9
    '*'  shift, and go to state 10
    '/'  shift, and go to state 11

    $default  reduce using rule 1 (ED)


State 6

    2 E: E . '+' E
    3  | E . '-' E
    4  | E . '*' E
    5  | E . '/' E
    6  | '(' E . ')'

    '+'  shift, and go to state 8
    '-'  shift, and go to state 9
    '*'  shift, and go to state 10
    '/'  shift, and go to state 11
    ')'  shift, and go to state 12


State 7

    0 $accept: ED $end .

    $default  accept


State 8

    2 E: E '+' . E

    ID   shift, and go to state 1
    NUM  shift, and go to state 2
    '('  shift, and go to state 3

    E  go to state 13


State 9

    3 E: E '-' . E

    ID   shift, and go to state 1
    NUM  shift, and go to state 2
    '('  shift, and go to state 3

    E  go to state 14


State 10

    4 E: E '*' . E

    ID   shift, and go to state 1
    NUM  shift, and go to state 2
    '('  shift, and go to state 3

    E  go to state 15


State 11

    5 E: E '/' . E

    ID   shift, and go to state 1
    NUM  shift, and go to state 2
    '('  shift, and go to state 3

    E  go to state 16


State 12

    6 E: '(' E ')' .

    $default  reduce using rule 6 (E)


State 13

    2 E: E . '+' E
    2  | E '+' E .
    3  | E . '-' E
    4  | E . '*' E
    5  | E . '/' E

    '*'  shift, and go to state 10
    '/'  shift, and go to state 11

    $default  reduce using rule 2 (E)


State 14

    2 E: E . '+' E
    3  | E . '-' E
    3  | E '-' E .
    4  | E . '*' E
    5  | E . '/' E

    '*'  shift, and go to state 10
    '/'  shift, and go to state 11

    $default  reduce using rule 3 (E)


State 15

    2 E: E . '+' E
    3  | E . '-' E
    4  | E . '*' E
    4  | E '*' E .
    5  | E . '/' E

    $default  reduce using rule 4 (E)


State 16

    2 E: E . '+' E
    3  | E . '-' E
    4  | E . '*' E
    5  | E . '/' E
    5  | E '/' E .

    $default  reduce using rule 5 (E)
